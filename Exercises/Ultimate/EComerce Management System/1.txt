Tables
Customers table:

CustomerID (int, Primary Key)

FirstName (varchar(60), not null)

LastName (varchar(60), not null)

Email (varchar(120), unique, not null)

DateOfBirth (date)

Products table:

ProductID (int, Primary Key)

ProductName (varchar(100), not null)

SupplierName (varchar(100))

ProductDetails (varchar(50))

Orders table:

OrderID (int, Primary Key)

CustomerID (int, Foreign Key references Customers(CustomerID))

ProductID (int, Foreign Key references Products(ProductID))

OrderDate (date, default to current date)

Functions
GetAvailableProducts: Returns products a customer has not yet ordered.

CalculateDiscountRate: Calculates the discount rate based on the quantity purchased.

GetCustomerFullName: Concatenates first name and last name to return the full name of a customer.

GetProductsBySupplier: Returns products supplied by a specific supplier.

GetOrderedProducts: Returns products a customer has ordered.

Use CASE: Incorporate a CASE statement in one of the functions, e.g., in CalculateDiscountRate, use CASE to apply different discount levels based on quantity.

Convert Data Types: In one of the functions, convert text data to datetime or int, e.g., convert a text date to datetime in CalculateDiscountRate.

Procedures (use transactions)
RetrieveInactiveCustomers: Retrieves customers who haven't placed any orders recently.

AddNewProduct: Adds a new product into the Products table.

UpdateCustomerInfo: Updates the information of an existing customer.

Views
Create a view to show all orders along with customer details.

Create another view to show all available products along with their suppliers.

Triggers
Create a trigger to automatically update the Orders table when a new record is added to the Products table.

Create another trigger to log changes when a customerâ€™s information is updated in the Customers table.

ALTER Tasks
Modify the Products table to add a new column for StockQuantity.

Alter the CalculateDiscountRate function to add new logic for special discount periods.

Alter constraints: e.g., change the Email column in Customers to be nullable.

DELETE Tasks
Delete constraints: e.g., remove the unique constraint on the Email column in Customers.

Delete every table, function, procedure, trigger, etc., one by one to practice the deletion power in SQL Server.

Insert, Update, and Delete Tasks
Insert rows:

Add the following rows into the Customers table:

(1, 'John', 'Doe', 'john.doe@example.com', '1985-05-15')

(2, 'Jane', 'Smith', 'jane.smith@example.com', '1990-08-22')

(3, 'Michael', 'Brown', NULL, '1980-12-01')

(4, 'Emily', 'Jones', 'emily.jones@example.com', NULL)

(5, 'Sarah', 'Taylor', 'sarah.taylor@example.com', '1995-11-09')

(6, 'David', 'Clark', 'david.clark@example.com', '1987-07-21')

Add the following rows into the Products table:

(1, 'Laptop', 'TechCorp', '16GB RAM, 512GB SSD')

(2, 'Smartphone', 'MobileInc', '128GB Storage')

(3, 'Tablet', NULL, '64GB Storage')

(4, 'Headphones', 'SoundCo', NULL)

(5, 'Smartwatch', 'WearableTech', '32GB Storage')

(6, 'Camera', 'PhotoPro', '24MP, 4K Video')

Add the following rows into the Orders table:

(1, 1, 1, '2024-09-01')

(2, 2, 2, '2024-09-02')

(3, 3, 3, NULL)

(4, 4, 4, '2024-09-04')

(5, 5, 5, '2024-09-05')

(6, 6, 6, NULL)

Update rows:

Update the email of the customer with CustomerID 3 in the Customers table to 'michael.brown@example.com'.

Update the product details of the product with ProductID 4 in the Products table to 'Wireless, Noise Cancelling'.

Update the order date of the order with OrderID 3 in the Orders table to '2024-09-03'.

Delete rows:

Delete the customer with CustomerID 6 from the Customers table.

Delete the product with ProductID 6 from the Products table.

Delete the order with OrderID 6 from the Orders table.
